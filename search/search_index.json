{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> \ud83d\udd11 Authentication Library for React Js for Token Based Auth with Json Web Token(JWT) \ud83d\udd11 </p> <p> </p> <p>React Auth Kit is a lightweight <code>auth state management</code> library for React JS based projects.</p> <p>It is production-ready, and gives you the following:</p> <ul> <li>\ud83d\udce6 Very lightweight</li> <li>\ud83d\udd27 Easy to use</li> <li>\u269b\ufe0f Build for React JS</li> <li>\u26a1 Works with Gastsby, Next JS</li> <li>\ud83d\ude80 Fast and easy to Implement</li> <li>\ud83d\udee1\ufe0f Supports JSON Web Token (JWT)</li> <li>\ud83d\udd12 Secure Client Side Authentication</li> <li>\u2328\ufe0f Highly typed and written in <code>TypeScript</code></li> </ul>"},{"location":"#stargazers","title":"Stargazers \u2b50","text":"<p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is Apache 2.0 License code</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Notice something that needs fixing? Or something that could be improved? Awesome! Here are some guidelines below that'll help you to do just that.</p> <p>In general, there are two main types of contribution,</p> <ul> <li>General improvements:</li> <li>Typo corrections.</li> <li>Fixing broken refs and links.</li> <li>Correcting inaccurate or out of date info.</li> <li> <p>Offering better explanations through clear writings and examples.</p> </li> <li> <p>New Pages or features</p> </li> <li>Adding a page of documentation that we haven't covered yet.</li> <li>Documenting a new feature that had been added to this project since its last release.</li> </ul>"},{"location":"contributing/#before-contributing","title":"Before contributing","text":"<ol> <li> <p>Read the CONTRIBUTING.md first if you haven't yet.</p> </li> <li> <p>Familiarize yourself with Mkdocs and Material for MkDocs with which we created the documentation.</p> </li> <li> <p>Read through some of our existing documents and get a feel about the overall structure and style.</p> </li> <li> <p>Read our 'Best practices' section and please ensure your PR meets those.</p> </li> </ol>"},{"location":"contributing/#steps-for-local-setup","title":"Steps for local setup","text":"<ol> <li> <p>We use Github Flow, all code changes happen through Pull Requests. Follow the steps specified at CONTRIBUTING.md to set up a local repo of the project.</p> </li> <li> <p>Install Material for MkDocs.</p> PipDockerGit <pre><code>pip install mkdocs-material\n</code></pre> <p>This will automatically install compatible versions of all dependencies: MkDocs, Markdown, Pygments and Python Markdown Extensions.</p> <p>The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the <code>latest</code> version with:</p> <pre><code>docker pull squidfunk/mkdocs-materiall\n</code></pre> <p>The mkdocs executable is provided as an entry point and serve is the default command.</p> <p>Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version:</p> <pre><code>git clone https://github.com/squidfunk/mkdocs-material.git\n</code></pre> <p>The theme will reside in the folder mkdocs-material/material. When cloning from git, you must install all required dependencies yourself:</p> <pre><code>pip install -r mkdocs-material/requirements.txt\n</code></pre> </li> <li> <p>All the contents are in the <code>docs</code> folder and the mkdocs config in <code>mkdocs.yml</code> relative to the project root directory.</p> </li> <li> <p>MkDocs includes a live preview server, so you can preview your changes as you modify the documentation. The server will automatically rebuild the site upon saving. Start it with:</p> <pre><code>mkdocs serve\n</code></pre> </li> <li> <p>You are now all set up and ready to contribute!</p> </li> </ol>"},{"location":"contributing/#best-practices","title":"Best practices","text":"<ol> <li> <p>All pages must include a proper title and an introduction.</p> </li> <li> <p>If the document contains a technical term, it must be highlighted using *term* markdown syntax.</p> </li> <li> <p>If the document contains an acronym or initialism, it should be first introduced highlighted in its expanded form followed by the commonly-accepted abbreviation in brackets (like Free and open-source software (FOSS)).</p> </li> <li> <p>Use paragraphs to introduce a single concept and move on to a new paragraph before introducing another or expanding upon the first concept. Keep the size of those paragraphs to no more than four to five lines.</p> </li> <li> <p>If you find you're putting commas in a sentence consider splitting it into two or more sentences for improved clarity.</p> </li> <li> <p>Split the document up into as many sub-sections as makes sense. This is especially helpful for the readers who want to skip ahead for reference, as we can also use subheads as navigational anchors.</p> </li> </ol> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is Apache 2.0 License code</p>"},{"location":"getting_started/","title":"Getting Started with React Auth Kit","text":"\ud83d\udc4b Welcome!  <p> Manage authentication with ease on your React-based projects using React Auth Kit. </p>"},{"location":"getting_started/#installation","title":"Installation","text":"<p>React-Auth-Kit and all it's plugins are available as a npm package.</p> <ul> <li> <p> React Auth Kit</p> <p>Core library to integrate React Auth Kit</p>  npm yarn pnpm <pre><code>npm install react-auth-kit\n</code></pre> <pre><code>yarn add react-auth-kit\n</code></pre> <pre><code>pnpm install react-auth-kit\n</code></pre> </li> <li> <p> @auth-kit/next</p> <p>Plugin to use the NextJs router</p>  npm yarn pnpm <pre><code>npm install @auth-kit/next\n</code></pre> <pre><code>yarn add @auth-kit/next\n</code></pre> <pre><code>pnpm install @auth-kit/next\n</code></pre> </li> <li> <p> @auth-kit/react-router</p> <p>Plugin to use the React router</p>  npm yarn pnpm <pre><code>npm install @auth-kit/react-router\n</code></pre> <pre><code>yarn add @auth-kit/react-router\n</code></pre> <pre><code>pnpm install @auth-kit/react-router\n</code></pre> </li> <li> <p> More Plugins are brewing Up!!</p> </li> </ul>"},{"location":"getting_started/#integration","title":"Integration","text":"<p>Integrate React Auth Kit into your application easily</p> <ul> <li> Integration with CRA and Vite - Integrate and unleash the power.</li> <li> Integration with Next. Js - Integrate and unleash the power.</li> </ul>"},{"location":"getting_started/#functionalities","title":"Functionalities","text":"<p>Add up multiple functions to your application hl_lines=\"2 5 9\"</p> <ul> <li> Sign In - Perform the Login or Signin Operation.</li> <li> Sign Out - Perform the Logout or Singout Operation.</li> <li> User Data - Get the current user's data in your app.</li> <li> Auth Header - Get the Auth Header for Network request in your app.</li> <li> Auth Status - Get the Auth Status (boolean value) in your components before rendering.</li> <li> Refresh Token - Refresh the Access Token using the Refresh token</li> </ul>"},{"location":"getting_started/#private-routing","title":"Private Routing","text":"<p>React Auth Kit supports various various routering frameworks to handle Private Routing and Redirection</p> <ul> <li> React Router - Integrate Private Route with React Router and React Router Dom</li> <li> Next Js App Router - Integrate Private Route with Next Js App Router</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is  MIT License code</p>"},{"location":"getting_started/authdata/","title":"User Data","text":"<p>Get the Authorized user's state from any Component simply by using <code>HOC</code> or <code>Hooks</code></p> <ul> <li>For Functional Components, you can use <code>useAuthUser()</code> hook inside any components</li> <li>For class-based components, you can wrap the component inside <code>withAuthUser()</code> HOC function.</li> </ul>"},{"location":"getting_started/authdata/#hook","title":"Hook","text":""},{"location":"getting_started/authdata/#import","title":"Import","text":"Import useAuthUser in your app<pre><code>import useAuthUser from 'react-auth-kit/hooks/useAuthUser';\n</code></pre>"},{"location":"getting_started/authdata/#usage","title":"Usage","text":"SecureComponent.js<pre><code>import React from 'react';\nimport useAuthUser from 'react-auth-kit/hooks/useAuthUser';\n\nconst SomeComponent = () =&gt; {\n    const auth = useAuthUser()\n\n    return(\n        &lt;div&gt;\n            Hello {auth.user}\n        &lt;/div&gt;\n    )\n}\n</code></pre>"},{"location":"getting_started/authdata/#higher-order-component","title":"Higher Order Component","text":""},{"location":"getting_started/authdata/#import_1","title":"Import","text":"Import withAuthUser in your app<pre><code>import withAuthUser from 'react-auth-kit/hoc/withAuthUser';\n</code></pre>"},{"location":"getting_started/authdata/#usage_1","title":"Usage","text":"SecureComponent.js<pre><code>import React from 'react';\nimport withAuthUser from 'react-auth-kit/hoc/withAuthUser';\n\nclass SomeComponent extends React.Component {\n    render(){\n        return (\n            &lt;div&gt;\n                Hello {this.props.authState.user}\n            &lt;/div&gt;\n        )\n    }\n}\n\nexport default withAuthUser(SomeComponent)\n</code></pre>"},{"location":"getting_started/authdata/#api","title":"API","text":"<ul> <li>useAuthUser</li> <li>withAuthUser</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"getting_started/authheader/","title":"Auth Header","text":"<p>Get the Auth Header for future requests from any Component simply by using <code>HOC</code> or <code>Hooks</code></p> <ul> <li>For Functional Components, you can use <code>useAuthHeader()</code> hook inside any components</li> <li>For class-based components, you can wrap the component inside <code>withAuthHeader()</code> HOC function.</li> </ul>"},{"location":"getting_started/authheader/#hook","title":"Hook","text":""},{"location":"getting_started/authheader/#import","title":"Import","text":"Import useAuthHeader in your app<pre><code>import useAuthHeader from 'react-auth-kit/hooks/useAuthHeader';\n</code></pre>"},{"location":"getting_started/authheader/#usage","title":"Usage","text":"SecureComponent.js<pre><code>import React from 'react'\nimport useAuthHeader from 'react-auth-kit/hooks/useAuthHeader';\n\nconst SomeComponent = () =&gt; {\n    const authHeader = useAuthHeader()\n\n    return(\n        &lt;div&gt;\n            {authHeader}\n        &lt;/div&gt;\n    )\n}\n</code></pre>"},{"location":"getting_started/authheader/#higher-order-component","title":"Higher Order Component","text":""},{"location":"getting_started/authheader/#import_1","title":"Import","text":"Import withAuthHeader in your app<pre><code>import withAuthHeader from 'react-auth-kit/hoc/withAuthHeader';\n</code></pre>"},{"location":"getting_started/authheader/#usage_1","title":"Usage","text":"SecureComponent.js<pre><code>import React from 'react';\nimport withAuthHeader from 'react-auth-kit/hoc/withAuthHeader';\n\nclass SomeComponent extends React.Component {\n    render(){\n        return (\n            &lt;div&gt;\n                {this.props.authHeader}\n            &lt;/div&gt;\n        )\n    }\n}\n\nexport default withAuthHeader(SomeComponent)\n</code></pre>"},{"location":"getting_started/authheader/#api","title":"API","text":"<ul> <li>useAuthHeader</li> <li>withAuthHeader</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"getting_started/checkauth/","title":"Authentication status","text":""},{"location":"getting_started/checkauth/#introduction","title":"Introduction","text":"<p>To get the information of whether the user is authenticated or not, <code>React Auth Kit</code> comes with <code>isAuth</code> functions</p> <p><code>IsAuth</code> functionality available in both <code>hook</code> and <code>Higher Order Component</code></p> <ul> <li>For Functional Components, you can use <code>useIsAuthenticated()</code> hook inside any components</li> <li>For class-based components, you can wrap the component inside <code>withIsAuthenticated()</code> HOC function.</li> </ul>"},{"location":"getting_started/checkauth/#hook","title":"Hook","text":"<p>Check the <code>authentication status</code> in React Functional Components(FC) by adding the <code>useIsAuthenticated</code> hook inside it.</p>"},{"location":"getting_started/checkauth/#import","title":"Import","text":"Import useIsAuthenticated in your app<pre><code>import useIsAuthenticated from 'react-auth-kit/hooks/useIsAuthenticated'\n</code></pre>"},{"location":"getting_started/checkauth/#demo","title":"Demo","text":"Component.js<pre><code>import React from 'react';\nimport useIsAuthenticated from 'react-auth-kit/hooks/useIsAuthenticated'\n\nconst AnyComponent = () =&gt; {\n    const isAuthenticated = useIsAuthenticated()\n\n    if(isAuthenticated){\n        // Redirect to Dashboard\n    }\n    else {\n        // Redirect to Login\n    }\n}\n</code></pre>"},{"location":"getting_started/checkauth/#higher-order-component","title":"Higher Order Component","text":""},{"location":"getting_started/checkauth/#import_1","title":"Import","text":"Import withAuthUser in your app<pre><code>import withIsAuthenticated from 'react-auth-kit/hoc/withIsAuthenticated';\n</code></pre>"},{"location":"getting_started/checkauth/#usage","title":"Usage","text":"component.jsx<pre><code>import React from \"react\";\nimport withIsAuthenticated from 'react-auth-kit/hoc/withIsAuthenticated';\n\nclass SomeComponent extends React.Component {\n\n    render(){\n        if(this.props.isAuthenticated){\n            // Redirect to Dashboard\n        }\n        else {\n            // Redirect to Login\n        }\n    }\n}\n\nexport default withIsAuthenticated(SomeComponent)\n</code></pre>"},{"location":"getting_started/checkauth/#api","title":"API","text":"<ul> <li>useIsAuthenticated</li> <li>withIsAuthenticated</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is Apache 2.0 License code</p>"},{"location":"getting_started/refreshtoken/","title":"Refresh the Access token using Refresh Token","text":"<p>Often JWT comes with a new challenge. You have to <code>refresh</code> the JWT token periodically using a token, named Refresh token.</p> <p>A refresh token is a special kind of token used to obtain a renewed access token. You can request new access tokens until the refresh token is on the DenyList. Applications must store refresh tokens securely because they essentially allow a user to remain authenticated forever.</p> <p>React Auth Kit implements an easy approach to integrate the refresh token.</p> <p>You can either use the refresh token in your application or you can leave it.</p>"},{"location":"getting_started/refreshtoken/#api-builder-createrefresh","title":"API Builder (createRefresh)","text":"<p>To build the refresh token API, you have to use <code>createRefresh</code> function. It is an identity function. It is mainly used for type checking and mobility.</p>"},{"location":"getting_started/refreshtoken/#import","title":"Import","text":"Import createRefresh in your app<pre><code>import createRefresh from 'react-auth-kit/createRefresh';\n</code></pre>"},{"location":"getting_started/refreshtoken/#usage","title":"Usage","text":"refresh.js<pre><code>const refresh = createRefresh({\n  interval: 10 // The time in sec to refresh the Access token,\n  refreshApiCallback: async (param) =&gt; {\n    try {\n      const response = await axios.post(\"/refresh\", param, {\n        headers: {'Authorization': `Bearer ${param.authToken}`}\n      })\n      console.log(\"Refreshing\")\n      return {\n        isSuccess: true,\n        newAuthToken: response.data.token,\n        newAuthTokenExpireIn: 10,\n        newRefreshTokenExpiresIn: 60\n      }\n    }\n    catch(error){\n      console.error(error)\n      return {\n        isSuccess: false\n      } \n    }\n  }\n})\n</code></pre>"},{"location":"getting_started/refreshtoken/#integration-with-the-app","title":"Integration with the App","text":"<p>To add the refresh token feature, simply add the return value of <code>createRefresh</code> function in the <code>createStore</code> in the refresh prop.</p> app.js<pre><code>import {AuthProvider} from 'react-auth-kit'\nimport refresh from \"./refresh\";\n\nconst store = createStore({\n  authName:'_auth',\n  authType:'cookie',\n  cookieDomain: window.location.hostname,\n  cookieSecure: window.location.protocol === 'https:',\n  refresh: refresh\n});\n\nfunction App() {\n  return (\n    &lt;AuthProvider store={store}&gt;\n      &lt;Routes/&gt;\n    &lt;/AuthProvider&gt;\n  );\n}\n</code></pre>"},{"location":"getting_started/refreshtoken/#api","title":"API","text":"<p>createRefresh</p> <p>Only use the return from createRefresh as the prop value</p> <p>Using values other than the return of <code>createRefresh</code> will cause the application to break. So only use the return of <code>createRefresh</code> as the prop value.</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is Apache 2.0 License code</p>"},{"location":"getting_started/signin/","title":"Sign In","text":"<p>React Auth Kit has easy-to-implement Signin procedures.</p> <p>signIn functionality available in both <code>React Hook</code> and <code>Higher Order Component</code></p> <ul> <li>For Functional Components, you can use <code>useSignIn()</code> hook inside any components</li> <li>For class-based components, you can wrap the component inside <code>withSignIn()</code> HOC function.</li> </ul>"},{"location":"getting_started/signin/#hook","title":"Hook","text":"<p>Call <code>useSignIn()</code> hook inside any component to signin the user.</p>"},{"location":"getting_started/signin/#import","title":"Import","text":"Import useSignIn in your app<pre><code>import useSignIn from 'react-auth-kit/hooks/useSignIn';\n</code></pre>"},{"location":"getting_started/signin/#usage","title":"Usage","text":"SignIn.js<pre><code>import useSignIn from 'react-auth-kit/hooks/useSignIn';\n\nconst SignInComponent = () =&gt; {\n    const signIn = useSignIn();\n    ...\n    const onSubmit = (e) =&gt; {\n        ...\n        if(signIn({\n            auth: {\n                token: 'ey....mA',\n                type: 'Bearer'\n            },\n            refresh: 'ey....mA'\n            userState: {\n                name: 'React User',\n                uid: 123456\n            }\n        })){\n            // Redirect or do-something\n        }else {\n            //Throw error\n        }\n    }\n\n    return (\n        ...\n    )\n}\n</code></pre> Full Example Code <pre><code>import React from \"react\"\nimport axios from 'axios'\nimport useSignIn from 'react-auth-kit/hooks/useSignIn';\n\nconst SignInComponent = () =&gt; {\n    const signIn = useSignIn()\n    const [formData, setFormData] = React.useState({email: '', password: ''})\n\n    const onSubmit = (e) =&gt; {\n        e.preventDefault()\n        axios.post('/api/login', formData)\n            .then((res)=&gt;{\n                if(res.status === 200){\n                    if(signIn({\n                        auth: {\n                            token: res.data.token,\n                            type: 'Bearer'\n                        },\n                        refresh: res.data.refreshToken\n                        userState: res.data.authUserState\n                    })){ // Only if you are using refreshToken feature\n                        // Redirect or do-something\n                    }else {\n                        //Throw error\n                    }\n                }\n            })\n    }\n\n    return (\n        &lt;form onSubmit={onSubmit}&gt;\n            &lt;input type={\"email\"} onChange={(e)=&gt;setFormData({...formData, email: e.target.value})}/&gt;\n            &lt;input type={\"password\"} onChange={(e)=&gt;setFormData({...formData, password: e.target.value})}/&gt;\n\n            &lt;button&gt;Submit&lt;/button&gt;\n        &lt;/form&gt;\n    )\n}\n</code></pre>"},{"location":"getting_started/signin/#higher-order-component","title":"Higher Order Component","text":"<p>Wrap class-based component with <code>withSignIn()</code> to implement signin.</p>"},{"location":"getting_started/signin/#import_1","title":"Import","text":"Import withSignIn in your app<pre><code>import withSignIn from 'react-auth-kit/hoc/withSignIn';\n</code></pre>"},{"location":"getting_started/signin/#usage_1","title":"Usage","text":"SignIn.js<pre><code>import { withSignIn } from 'react-auth-kit'\n\nclass signInComponent extends React.Component {\n\n    const onSubmit = (e) =&gt; {\n        ...\n        if(this.props.signIn({\n            auth: {\n                token: 'ey....mA',\n                type: 'Bearer'\n            },\n            refresh: 'ey....mA'\n            userState: {\n                name: 'React User',\n                uid: 123456\n            }\n        })){\n            // Redirect or do-something\n        }else {\n            //Throw error\n        }\n    }\n\n    render(){\n        ...\n    }\n}\n\nexport default withSignIn(signInComponent)\n</code></pre> Full Example Code SignIn.js<pre><code>import React from 'react'\nimport axios from 'axios'\nimport { withSignIn } from 'react-auth-kit'\n\nclass signInComponent extends React.Component {\n    state={email: '', password: ''}\n\n    onSubmit = (e) =&gt; {\n        e.preventDefault()\n        axios.post('/api/login', this.state)\n            .then((res)=&gt;{\n                if(res.status === 200){\n                    if(this.props.signIn({\n                        auth: {\n                            token: 'ey....mA',\n                            type: 'Bearer'\n                        },\n                        refresh: 'ey....mA'\n                        userState: {\n                            name: 'React User',\n                            uid: 123456\n                        }\n                    })){\n                        // Redirect or do-something\n                    }else {\n                        //Throw error\n                    }\n                }\n            })\n    }\n\n    render(){\n        return (\n            &lt;form onSubmit={onSubmit}&gt;\n                &lt;input type={\"email\"} onChange={(e)=&gt;this.setState({...this.state, email: e.target.value})}/&gt;\n                &lt;input type={\"password\"} onChange={(e)=&gt;this.setState({...this.state, password: e.target.value})}/&gt;\n\n                &lt;button&gt;Submit&lt;/button&gt;\n            &lt;/form&gt;\n        )\n    }\n}\n\nexport default withSignIn(signInComponent)\n</code></pre>"},{"location":"getting_started/signin/#api","title":"API","text":"<ul> <li>useSignIn</li> <li>withSignIn</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"getting_started/signout/","title":"Sign Out","text":"<p>React Auth Kit has easy-to-implement Sign Out procedures.</p> <p>signOut functionality available in both <code>React Hook</code> and <code>Higher Order Component</code></p> <ul> <li>For Functional Components, you can use <code>useSignOut()</code> hook inside any components</li> <li>For class-based components, you can wrap the component inside <code>withSignOut()</code> HOC function.</li> </ul>"},{"location":"getting_started/signout/#hook","title":"Hook","text":"<p>Call <code>useSignOut()</code> hook inside any component to signout the user.</p>"},{"location":"getting_started/signout/#import","title":"Import","text":"Import useSignOut in your app<pre><code>import useSignOut from 'react-auth-kit/hooks/useSignOut';\n</code></pre>"},{"location":"getting_started/signout/#usage","title":"Usage","text":"SignOut.js<pre><code>import React from \"react\"\nimport useSignOut from 'react-auth-kit/hooks/useSignOut';\n\nconst SignOutComponent = () =&gt; {\n    const signOut = useSignOut()\n\n    return (\n      &lt;button onClick={() =&gt; signOut()}&gt;Sign Out&lt;/button&gt;\n    )\n}\n</code></pre>"},{"location":"getting_started/signout/#higher-order-component","title":"Higher Order Component","text":"<p>Wrap class-based component with <code>withSignOut()</code> to implement signout.</p>"},{"location":"getting_started/signout/#import_1","title":"Import","text":"Import withSignOut in your app<pre><code>import withSignOut from 'react-auth-kit/hoc/withSignOut';\n</code></pre>"},{"location":"getting_started/signout/#demo","title":"Demo","text":"SignOut.js<pre><code>import React from \"react\"\nimport withSignOut from 'react-auth-kit/hoc/withSignOut';\n\nclass signOutComponent extends React.Component {\n\n    render(){\n        return (\n            &lt;button onClick={() =&gt; this.props.signOut()}&gt;Sign Out&lt;/button&gt;\n        )\n    }\n}\n\nexport default withSignIn(signOutComponent)\n</code></pre>"},{"location":"getting_started/signout/#api","title":"API","text":"<ul> <li>useSignOut</li> <li>withSignOut</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"getting_started/integration/next-app-router/","title":"Next.JS App Router","text":"<p>React Auth Kit provides an easy way to enable authentication in a Next.Js Application. After integration, you can use all the React Auth Kit core functionalities in the Next App.</p> <p>Info</p> <p>As of now, React Auth Kit only supports <code>Client Side Rendering(CSR)</code> of User Data and redirection. Implementation of Server Side Rendering(SSR) will be implemented in the future release.</p>"},{"location":"getting_started/integration/next-app-router/#store-creation","title":"Store Creation","text":"<p>To use React Auth Kit in the application, we first need to create the store that holds the data for our application. You can create the store in a separate file.</p>"},{"location":"getting_started/integration/next-app-router/#import","title":"Import","text":"Import createStore in your app<pre><code>import createStore from 'react-auth-kit/createStore';\n</code></pre>"},{"location":"getting_started/integration/next-app-router/#usage","title":"Usage","text":"src/store.{js|ts}<pre><code>const store = createStore({\n  authName:'_auth',\n  authType:'cookie',\n  cookieDomain: window.location.hostname,\n  cookieSecure: window.location.protocol === 'https:',\n});\n</code></pre>"},{"location":"getting_started/integration/next-app-router/#provider","title":"Provider","text":"<p>React Auth Kit uses React's context Provider API. So we'll use the provided guide by Varcel to implement context API in the Next Js application. Read the vercel provided blog</p> <p>In the Provider file, we'll initialize the AuthProvider and pass the store.</p> app/provider.js<pre><code>\"use client\"; // (1)\n\nimport React from 'react';\nimport createStore from 'react-auth-kit/createStore';\nimport AuthProvider from 'react-auth-kit/AuthProvider';\n\nconst store = createStore({\n    authName:\"__auth\",\n    authType:\"cookie\",\n    cookieDomain:'127.0.0.1',\n    cookieSecure:false,\n})\n\nconst Providers = ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) =&gt; {\n\n  return (\n    &lt;AuthProvider store={store}&gt;\n      {children}\n    &lt;/AuthProvider&gt;\n  )\n}\n\nexport default Providers;\n</code></pre> <ol> <li> We are required to use <code>use client;</code>, because the provider will only render on the client side.</li> </ol>"},{"location":"getting_started/integration/next-app-router/#integrate-with-the-application","title":"Integrate with the Application","text":"<p>We now have to take the <code>Provider</code>, and integrate it with the <code>RootLayout</code> so use it in the application. Providers added in the <code>RootLayout</code> are visible throughout the application. </p> <pre><code>import Providers from './providers'; // (1)\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    &lt;Providers&gt; // (2)\n      &lt;html lang=\"en\"&gt;\n        &lt;body&gt;\n            {children}\n        &lt;/body&gt;\n      &lt;/html&gt;\n    &lt;/Providers&gt;\n  )\n}\n</code></pre> <ol> <li>Importing the previously created <code>Providers</code> component.</li> <li>Wrap the whole Application inside the Provider. </li> </ol>"},{"location":"getting_started/integration/next-app-router/#example","title":"Example","text":"<p>The complete example is available in examples/create-next-ts-route</p>"},{"location":"getting_started/integration/next-app-router/#api","title":"API","text":"<ul> <li>createStore</li> <li>AuthProvider</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"getting_started/integration/react-app/","title":"Integration","text":"<p>React Auth Kit uses an <code>RxJs</code>-based store to maintain data and React's Context API to distribute data throughout the application.</p>"},{"location":"getting_started/integration/react-app/#store-creation","title":"Store Creation","text":"<p>To use React Auth Kit in the application, we first need to create the store that holds the data for our application.</p>"},{"location":"getting_started/integration/react-app/#import","title":"Import","text":"Import createStore in your app<pre><code>import createStore from 'react-auth-kit/createStore';\n</code></pre>"},{"location":"getting_started/integration/react-app/#usage","title":"Usage","text":"Create Store<pre><code>const store = createStore({\n  authName:'_auth',\n  authType:'cookie',\n  cookieDomain: window.location.hostname,\n  cookieSecure: window.location.protocol === 'https:',\n});\n</code></pre>"},{"location":"getting_started/integration/react-app/#authprovider","title":"AuthProvider","text":"<p>AuthProvider provides top-level context API for React Auth Kit.</p>"},{"location":"getting_started/integration/react-app/#import_1","title":"Import","text":"Import AuthProvider in your app<pre><code>import AuthProvider from 'react-auth-kit';\n</code></pre>"},{"location":"getting_started/integration/react-app/#usage_1","title":"Usage","text":"<p>Integrate <code>AuthProvider</code> before Routes. The best place is <code>app.js</code>.</p> app.js<pre><code>import React from 'react';\nimport { AuthProvider } from 'react-auth-kit'\nimport RouteComponent from './routes';\n\nconst App = () =&gt; (\n    &lt;AuthProvider store={store}&gt;\n      &lt;RoutesComponent/&gt;\n    &lt;/AuthProvider&gt;\n);\n\nexport default App;\n</code></pre>"},{"location":"getting_started/integration/react-app/#api","title":"API","text":"<ul> <li>createStore</li> <li>AuthProvider</li> </ul> <p>Warning</p> <p><code>AuthProvider</code> should wrap the BrowserRouter or HashRouter, otherwise <code>PrivateRoute</code> will not work and throw an error.</p> <p>Warning</p> <p>If you are using the Refresh Token feature, then you must add the <code>refresh</code> prop with proper value, otherwise refresh token will throw a not implemented error. If you are not using the Refresh Token feature, then don't add it</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"getting_started/privateroute/next-app/","title":"Next.Js App Router Private Route","text":"<p>Usage of Next.Js Private router will make the page render on the client side only, it eliminates the server-side rendering for the page. This is done purposefully to make sure no hydration error occurs.</p>"},{"location":"getting_started/privateroute/next-app/#installation","title":"Installation","text":"<p>To use Private Route with Next.Js, you need to install the <code>next plugin</code> for react auth kit.</p> <p>To install and save in your <code>package.json</code> dependencies, run:</p>  npm yarn pnpm Install With NPM<pre><code>npm install --save @auth-kit/next\n</code></pre> Install With Yarn<pre><code>yarn add @auth-kit/next\n</code></pre> Install With PNPM<pre><code>pnpm install --save @auth-kit/next\n</code></pre>"},{"location":"getting_started/privateroute/next-app/#usage","title":"Usage","text":"<p>To make a page private, react-auth-kit included a component <code>NextAuth</code>. By simply wrapping the <code>page.jsx</code> or <code>layout.jsx</code> into the NextAuth will make the page secure from unauthorized access. It works seamlessly on any number of pages.</p> <p>Provide the <code>fallbackPath</code> prop in the NextAuth while using the component.  If the user is not authorized, the page will be redirected to the fallback path.</p> layout.jsx<pre><code>// Implement in the layout.jsx\nimport NextAuth from '@auth-kit/next/NextAuth';\n\nexport default function Layout({\n    children,\n}: {\n    children: React.ReactNode\n}) {\n    return &lt;NextAuth fallbackPath={'/login'}&gt;{children}&lt;/NextAuth&gt;\n}\n</code></pre> page.jsx<pre><code>// Implement in the page.jsx\nimport NextAuth from '@auth-kit/next/NextAuth';\n\nexport default function Page() {\n    return (\n        &lt;NextAuth fallbackPath={'/login'}&gt;\n            ...\n        &lt;/NextAuth&gt;\n    );\n}\n</code></pre>"},{"location":"getting_started/privateroute/next-app/#reference","title":"Reference","text":"<p>NextAuth</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is Apache 2.0 License code</p>"},{"location":"getting_started/privateroute/react-router/","title":"Private Route with React Router","text":"<p>RequireAuth can only be used with React Router v6. If you are using React Router v5, please use React-kuth-kit v1.x with PrivateRoute.</p>"},{"location":"getting_started/privateroute/react-router/#installation","title":"Installation","text":"<p>To use Private Route with React Router, you need to install the <code>react-router plugin</code> for react auth kit.</p> <p>To install and save in your <code>package.json</code> dependencies, run:</p>  npm yarn pnpm Install With NPM<pre><code>npm install --save @auth-kit/react-router\n</code></pre> Install With Yarn<pre><code>yarn add @auth-kit/react-router\n</code></pre> Install With PNPM<pre><code>pnpm install --save @auth-kit/react-router\n</code></pre>"},{"location":"getting_started/privateroute/react-router/#usage","title":"Usage","text":"<p><code>@auth-kit/react-router</code> comes with 2 useful functions that help to manage routing with React Router.</p> <p>These Functions are:</p> <ol> <li>AuthOutlet - Used to Secure multiple routes at once.</li> <li>RequireAuth - Used to Secure individual routes one at a time, preferred for a granular approach. </li> </ol>"},{"location":"getting_started/privateroute/react-router/#authoutlet","title":"AuthOutlet","text":""},{"location":"getting_started/privateroute/react-router/#import","title":"Import","text":"Import AuthOutlet<pre><code>import AuthOutlet from '@auth-kit/react-router/AuthOutlet'\n</code></pre>"},{"location":"getting_started/privateroute/react-router/#usage_1","title":"Usage","text":"<p>Add <code>AuthOutlet</code> in your Routes Files inside <code>BrowserRouter</code> or <code>HashRouter</code></p> RouteComponent.jsx<pre><code>&lt;BrowserRouter&gt;\n  &lt;Routes&gt;\n    &lt;Route path={'/'} element={&lt;Home/&gt;}/&gt;\n    &lt;Route path={'/login' } element={&lt;Login/&gt;}/&gt;\n    &lt;Route element={&lt;AuthOutlet fallbackPath='/login' /&gt;}&gt;\n      &lt;Route path='/' element={&lt;Users/&gt;} /&gt;\n      &lt;Route path='/products' element={&lt;Products/&gt;} /&gt;\n    &lt;/Route&gt;\n  &lt;/Routes&gt;\n&lt;/BrowserRouter&gt;\n</code></pre> Full Code <pre><code>import React from \"react\";\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport AuthOutlet from '@auth-kit/react-router/AuthOutlet';\nimport SecureComponent from \"./SecureComponent\";\n\nconst Routes = () =&gt; {\n  return (\n    &lt;BrowserRouter&gt;\n      &lt;Routes&gt;\n        &lt;Route path={'/'} element={&lt;Home/&gt;}/&gt;\n        &lt;Route path={'/login' } element={&lt;Login/&gt;}/&gt;\n        &lt;Route element={&lt;AuthOutlet fallbackPath='/login' /&gt;}&gt;\n          &lt;Route path='/' element={&lt;Users/&gt;} /&gt;\n          &lt;Route path='/products' element={&lt;Products/&gt;} /&gt;\n        &lt;/Route&gt;\n      &lt;/Routes&gt;\n    &lt;/BrowserRouter&gt;\n  )\n}\n</code></pre>"},{"location":"getting_started/privateroute/react-router/#requireauth","title":"RequireAuth","text":""},{"location":"getting_started/privateroute/react-router/#import_1","title":"Import","text":"Import RequireAuth<pre><code>import RequireAuth from '@auth-kit/react-router/RequireAuth'\n</code></pre>"},{"location":"getting_started/privateroute/react-router/#usage_2","title":"Usage","text":"<p>Add <code>RequireAuth</code> in your Routes Files inside <code>BrowserRouter</code> or <code>HashRouter</code></p> RouteComponent.jsx<pre><code>&lt;BrowserRouter&gt;\n  &lt;Routes&gt;\n    &lt;Route path={'/'} element={&lt;Home/&gt;}/&gt;\n    &lt;Route path={'/login' } element={&lt;Login/&gt;}/&gt;\n    &lt;Route path={'/secure'} element={\n      &lt;RequireAuth fallbackPath={'/login'}&gt;\n        &lt;SecureComponent/&gt;\n          &lt;/RequireAuth&gt;\n      }\n    /&gt;\n  &lt;/Routes&gt;\n&lt;/BrowserRouter&gt;\n</code></pre> Full Code <pre><code>import React from \"react\";\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport RequireAuth from '@auth-kit/react-router/RequireAuth';\nimport SecureComponent from \"./SecureComponent\";\n\nconst Routes = () =&gt; {\n  return (\n    &lt;BrowserRouter&gt;\n      &lt;Routes&gt;\n        &lt;Route path={'/'} element={&lt;Home/&gt;}/&gt;\n        &lt;Route path={'/login' } element={&lt;Login/&gt;}/&gt;\n        &lt;Route path={'/secure'} element={\n          &lt;RequireAuth fallbackPath={'/login'}&gt;\n            &lt;SecureComponent/&gt;\n          &lt;/RequireAuth&gt;\n        }\n        /&gt;\n      &lt;/Routes&gt;\n    &lt;/BrowserRouter&gt;\n  )\n}\n</code></pre> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is Apache 2.0 License code</p>"},{"location":"reference/","title":"Reference","text":""},{"location":"reference/#react-auth-kit","title":"react-auth-kit","text":"<p>React Auth Kit Core Library</p> <ul> <li>AuthProvider - Auth Provider for react auth kit</li> <li>createStore - Create auth store with create the store</li> <li>createRefresh - Create the refresh token system</li> <li>Hooks - React Auth Kit hooks to interact with the library</li> <li>Higher Order Component - Higher Order Components to interact with the library</li> </ul>"},{"location":"reference/#auth-kitreact-router","title":"@auth-kit/react-router","text":"<p>React Auth Kit Plugin to interact with React Router.</p> <ul> <li>AuthOutlet - Private Route for multiple components at once</li> <li>RequireAuth - Private Route one component</li> </ul>"},{"location":"reference/#auth-kitnext","title":"@auth-kit/next","text":"<p>Raact Auth Kit Plugin to interact with Next.</p> <ul> <li>NextAuth - Private Route integration for Next Js Pages or Layout</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/next/next-auth/","title":"AuthOutlet","text":""},{"location":"reference/next/next-auth/#import","title":"Import","text":"<pre><code>import NextAuth from '@auth-kit/next/NextAuth'\n</code></pre>"},{"location":"reference/next/next-auth/#function-signature","title":"Function Signature","text":"<p>NextAuth(<code>{fallbackPath: string}</code>): <code>React.ReactNode</code></p> <p>NextAuth provides an easy solution to implement private route solutions using the next js route system</p>"},{"location":"reference/next/next-auth/#parameters","title":"Parameters","text":"Name Type Description <code>fallbackPath</code> <code>string</code> Path to redirect if the user is not authenticated"},{"location":"reference/next/next-auth/#example","title":"Example","text":"<p>Wrap the children of the secure layout in the <code>NextAuth</code> to make the page private.</p> <p>If the user is authenticated, then the route will be visible to the user, else the user will be redirected to the fallback path provided.</p> layout.jsx<pre><code>// Implement in the layout.jsx\nimport NextAuth from '@auth-kit/next/NextAuth';\n\nexport default function Layout({\n    children,\n}: {\n    children: React.ReactNode\n}) {\n    return &lt;NextAuth fallbackPath={'/login'}&gt;{children}&lt;/NextAuth&gt;\n}\n</code></pre> page.jsx<pre><code>// Implement in the page.jsx\nimport NextAuth from '@auth-kit/next/NextAuth';\n\nexport default function Page() {\n    return (\n        &lt;NextAuth fallbackPath={'/login'}&gt;\n            ...\n        &lt;/NextAuth&gt;\n    );\n}\n</code></pre>"},{"location":"reference/next/next-auth/#defined-in","title":"Defined in","text":"<p>packages/next/src/NextAuth.tsx</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/authprovider/","title":"AuthProvider","text":""},{"location":"reference/react-auth-kit/authprovider/#import","title":"Import","text":"<pre><code>import AuthProvider from 'react-auth-kit';\n</code></pre>"},{"location":"reference/react-auth-kit/authprovider/#function-signature","title":"Function Signature","text":"<p>AuthProvider&lt;<code>T</code>&gt;(<code>{store: createStoreReturn&lt;T&gt;, children: React.ReactNode}</code>): <code>ReturnType</code>&lt;<code>React.FC</code>&gt;</p> <p>React Provider that includes React Auth Kit functionality in your React Application.</p>"},{"location":"reference/react-auth-kit/authprovider/#type-parameters","title":"Type Parameters","text":"Name Description Type <code>T</code> Type of User State Object extends <code>object</code>"},{"location":"reference/react-auth-kit/authprovider/#parameters","title":"Parameters","text":"Name Type Required Description <code>store</code> <code>createStoreReturn</code>&lt;<code>T</code>&gt; Returned value from createStore function <code>children</code> <code>React.ReactNode</code> React Component or Element"},{"location":"reference/react-auth-kit/authprovider/#returns","title":"Returns","text":"<p><code>ReturnType&lt;React.FC&gt;</code></p> <p>React Functional component with React Auth Kit Recharged.</p>"},{"location":"reference/react-auth-kit/authprovider/#remarks","title":"Remarks","text":"<p>Make sure you wrap your application as well as your router components in AuthProvider.</p> <p>AuthProvider should be your Topmost element so that it can work effectively throughout the application.</p>"},{"location":"reference/react-auth-kit/authprovider/#example","title":"Example","text":"<pre><code>import AuthProvider from 'react-auth-kit';\nimport createStore from 'react-auth-kit/createStore'; \n\nconst store = createStore();\n\n&lt;AuthProvider store={store}&gt;\n &lt;RoutesComponent/&gt;\n&lt;/AuthProvider&gt;\n</code></pre>"},{"location":"reference/react-auth-kit/authprovider/#defined-in","title":"Defined in","text":"<p>packages/react-auth-kit/src/AuthProvider.tsx</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/createRefresh/","title":"createRefresh","text":""},{"location":"reference/react-auth-kit/createRefresh/#import","title":"Import","text":"<pre><code>import createRefresh from 'react-auth-kit/createRefresh';\n</code></pre>"},{"location":"reference/react-auth-kit/createRefresh/#function-signature","title":"Function Signature","text":"<p>createRefresh&lt;<code>T</code>&gt;(<code>createRefreshParamInterface</code>): <code>createRefreshParamInterface</code>&lt;<code>T</code>&gt;</p>"},{"location":"reference/react-auth-kit/createRefresh/#type-parameters","title":"Type Parameters","text":"Name Description <code>T</code> Type of User State Object"},{"location":"reference/react-auth-kit/createRefresh/#parameters","title":"Parameters","text":"Name Type Required Description <code>param</code> <code>createRefreshParamInterface</code>&lt;<code>T</code>&gt; Parameters required for the refresh engine"},{"location":"reference/react-auth-kit/createRefresh/#returns","title":"Returns","text":"<p><code>createRefreshParamInterface</code>&lt;<code>T</code>&gt;</p> <p>Same params with an added layer of safety net.</p>"},{"location":"reference/react-auth-kit/createRefresh/#example","title":"Example","text":"<pre><code>const refresh = createRefresh({\n    interval: 10,\n    refreshApiCallback: async (param) =&gt; {\n        try {\n            const response = await axios.post(\"/refresh\", param, {\n                headers: {'Authorization': `Bearer ${param.authToken}`}\n            })\n            console.log(\"Refreshing\")\n            return {\n                isSuccess: true,\n                newAuthToken: response.data.token,\n                newAuthTokenExpireIn: 10,\n                newRefreshTokenExpiresIn: 60\n            }\n        }\n        catch(error){\n            console.error(error)\n            return {\n                isSuccess: false\n            } \n        }\n    }\n})\n</code></pre>"},{"location":"reference/react-auth-kit/createRefresh/#remarks","title":"Remarks","text":"<p>This function doesn't really \"do anything\" at runtime, it just helps to organize the code base Use this function to create the refresh token system</p>"},{"location":"reference/react-auth-kit/createRefresh/#defined-in","title":"Defined in","text":"<p>packages/react-auth-kit/src/createRefresh.ts:119</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/createStore/","title":"createStore","text":""},{"location":"reference/react-auth-kit/createStore/#import","title":"Import","text":"<pre><code>import createStore from 'react-auth-kit/createStore';\n</code></pre>"},{"location":"reference/react-auth-kit/createStore/#function-signature","title":"Function Signature","text":"<p>createStore&lt;<code>T</code>&gt;(<code>params</code>): <code>createStoreReturn</code>&lt;<code>T</code>&gt;</p> <p>createStore creates the default store for React Auth Kit.</p> <p>This store is like a Redux store, where every object and data is stored.</p>"},{"location":"reference/react-auth-kit/createStore/#type-parameters","title":"Type Parameters","text":"Name Description <code>T</code> Type of User State Object"},{"location":"reference/react-auth-kit/createStore/#parameters","title":"Parameters","text":"Name Type Required Description <code>authName</code> <code>string</code> This name will also be used as a prefix for all other cookies. <code>authType</code> <code>string</code> Type of the Storage. Options : <code>cookie</code> , <code>localstorage</code> <code>cookieDomain</code> <code>string</code> Domain of the cookie, for which the cookie is valid. Needed if you are using <code>cookie</code> as authType <code>cookieSecure</code> <code>boolean</code> Indicating if the cookie transmission requires a secure protocol (https). Needed if you are using <code>cookie</code> as authType <code>refresh</code> <code>createRefreshParamInterface&lt;T&gt;</code> Refresh API. Created using <code>createRefresh</code> function."},{"location":"reference/react-auth-kit/createStore/#returns","title":"Returns","text":"<p>Auth Kit Store</p>"},{"location":"reference/react-auth-kit/createStore/#example","title":"Example","text":"<p>Here is an example on JavaScript</p> <pre><code>import createStore from 'react-auth-kit/createStore';\n\nconst store = createStore({\n authName:'_auth',\n authType:'cookie',\n cookieDomain: window.location.hostname,\n cookieSecure: window.location.protocol === 'https:'\n})\n</code></pre> <p>Here is an example on TypeScript</p> <pre><code>interface IUserData {\n name: string;\n uuid: string;\n};\n\nconst store = createStore&lt;IUserData&gt;({\n authName:'_auth',\n authType:'cookie',\n cookieDomain: window.location.hostname,\n cookieSecure: window.location.protocol === 'https:'\n})\n</code></pre>"},{"location":"reference/react-auth-kit/createStore/#defined-in","title":"Defined in","text":"<p>packages/react-auth-kit/src/createStore.ts:96</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/errors/","title":"Errors","text":""},{"location":"reference/react-auth-kit/errors/#autherror","title":"AuthError","text":""},{"location":"reference/react-auth-kit/errors/#import","title":"Import","text":"<pre><code>import { AuthError } from 'react-auth-kit/errors';\n</code></pre>"},{"location":"reference/react-auth-kit/errors/#constructor","title":"constructor","text":"<p><code>new AuthError(message)</code></p>"},{"location":"reference/react-auth-kit/errors/#parameters","title":"Parameters","text":"Name Type Required Description <code>message</code> <code>string</code> Error Message to be shown to the developer."},{"location":"reference/react-auth-kit/errors/#defined-in","title":"Defined in","text":"<p>packages/react-auth-kit/src/errors.ts:8</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/types/","title":"React Auth Kit Types","text":""},{"location":"reference/react-auth-kit/types/#createrefreshparaminterface","title":"createRefreshParamInterface","text":"<p>Refresh Token parameter types</p>"},{"location":"reference/react-auth-kit/types/#parameter","title":"Parameter","text":"Name Type Required Description interval <code>number</code> Interval on which the callback function is called refreshApiCallback <code>refreshTokenCallback&lt;T&gt;</code> A Callback function which'll have the network request <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hoc/","title":"React Auth Kit Higher Order Components","text":"<ul> <li>withAuthHeader - Inject the Auth header inside your react class-based component</li> <li>withAuthUser - Inject the User's state inside your react class-based component</li> <li>withIsAuthenticated - Inject authentication status inside your react class-based component</li> <li>withSignIn - Inject sign-in function to log in or sign in the user inside your react class-based component</li> <li>withSignOut - Inject sign out function to log out or sign out the user inside your react class-based component</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hoc/withAuthHeader/","title":"withAuthHeader","text":"<p>Deprecated Higher-order components are not commonly used in modern React code, use Hooks instead</p>"},{"location":"reference/react-auth-kit/hoc/withAuthHeader/#import","title":"Import","text":"<pre><code>import withAuthHeader from 'react-auth-kit/higherOrderComponents/withAuthHeader';\n</code></pre>"},{"location":"reference/react-auth-kit/hoc/withAuthHeader/#function-signature","title":"Function Signature","text":"<p>withAuthHeader&lt;<code>P</code>&gt;(<code>Component</code>): <code>React.FunctionComponent</code>&lt;<code>P</code>&gt;</p>"},{"location":"reference/react-auth-kit/hoc/withAuthHeader/#type-parameters","title":"Type Parameters","text":"Name Type Description <code>P</code> extends <code>withAuthHeaderProps</code> Props of the component"},{"location":"reference/react-auth-kit/hoc/withAuthHeader/#parameters","title":"Parameters","text":"Name Type Description <code>Component</code> <code>ComponentType</code>&lt;<code>P</code>&gt; React Class based Component"},{"location":"reference/react-auth-kit/hoc/withAuthHeader/#returns","title":"Returns","text":"<p><code>React.FunctionComponent</code>&lt;<code>P</code>&gt;</p> <p>React Higher Order Component with injected <code>authHeader</code> prop.</p> <p>React HOC that injects the auth header into the class-based component props</p> <p>Format: <code>type token</code> (authType-space-authToken)</p>"},{"location":"reference/react-auth-kit/hoc/withAuthHeader/#example","title":"Example","text":"<pre><code>class MyComponent extends React.Component {\n render() {\n   return &lt;h1&gt;Hello, {this.props.authHeader}&lt;/h1&gt;;\n }\n}\nexport default withAuthHeader(MyComponent);\n</code></pre>"},{"location":"reference/react-auth-kit/hoc/withAuthHeader/#throws","title":"Throws","text":"<p>AuthError - Thrown if the Hook is used outside the Provider Scope.</p>"},{"location":"reference/react-auth-kit/hoc/withAuthHeader/#defined-in","title":"Defined in","text":"<p>higherOrderComponents/withAuthHeader.tsx</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hoc/withAuthUser/","title":"withAuthUser","text":"<p>Deprecated Higher-order components are not commonly used in modern React code, use Hooks instead</p>"},{"location":"reference/react-auth-kit/hoc/withAuthUser/#import","title":"Import","text":"<pre><code>import withAuthUser from 'react-auth-kit/higherOrderComponents/withAuthUser';\n</code></pre>"},{"location":"reference/react-auth-kit/hoc/withAuthUser/#function-signature","title":"Function Signature","text":"<p>withAuthUser&lt;<code>T</code>, <code>P</code>&gt;(<code>Component</code>): <code>React.FunctionComponent</code>&lt;<code>P</code>&gt;</p>"},{"location":"reference/react-auth-kit/hoc/withAuthUser/#type-parameters","title":"Type Parameters","text":"Name Type Description <code>T</code> <code>T</code> Type of User State Object <code>P</code> extends <code>withAuthStateProps</code>&lt;<code>T</code>&gt; Props of the component"},{"location":"reference/react-auth-kit/hoc/withAuthUser/#parameters","title":"Parameters","text":"Name Type Description <code>Component</code> <code>ComponentType</code>&lt;<code>P</code>&gt; React Class based Component"},{"location":"reference/react-auth-kit/hoc/withAuthUser/#returns","title":"Returns","text":"<p><code>React.FunctionComponent</code>&lt;<code>P</code>&gt;</p> <p>React Higher Order Component with injected <code>authState</code> prop</p> <p>React HOC that injects the user state into the class-based component props</p> <p>If the prop is null then the user may be not authenticated. Use <code>isAuthenticated</code> to verify</p>"},{"location":"reference/react-auth-kit/hoc/withAuthUser/#example","title":"Example","text":"<pre><code>class MyComponent extends React.Component {\n render() {\n   return &lt;h1&gt;Hello, {this.props.authState}&lt;/h1&gt;;\n }\n}\nexport default withAuthUser(MyComponent);\n</code></pre>"},{"location":"reference/react-auth-kit/hoc/withAuthUser/#throws","title":"Throws","text":"<p>AuthError - Thrown if the Hook is used outside the Provider Scope.</p>"},{"location":"reference/react-auth-kit/hoc/withAuthUser/#defined-in","title":"Defined in","text":"<p>higherOrderComponents/withAuthUser.tsx</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hoc/withIsAuthenticated/","title":"withIsAuthenticated","text":"<p>Deprecated Higher-order components are not commonly used in modern React code, use Hooks instead</p>"},{"location":"reference/react-auth-kit/hoc/withIsAuthenticated/#import","title":"Import","text":"<pre><code>import withIsAuthenticated from 'react-auth-kit/higherOrderComponents/withIsAuthenticated';\n</code></pre>"},{"location":"reference/react-auth-kit/hoc/withIsAuthenticated/#function-signature","title":"Function Signature","text":"<p>withIsAuthenticated&lt;<code>P</code>&gt;(<code>Component</code>): <code>React.FunctionComponent</code>&lt;<code>P</code>&gt;</p>"},{"location":"reference/react-auth-kit/hoc/withIsAuthenticated/#type-parameters","title":"Type Parameters","text":"Name Type Description <code>P</code> extends <code>withAuthHeaderProps</code> Props of the component"},{"location":"reference/react-auth-kit/hoc/withIsAuthenticated/#parameters","title":"Parameters","text":"Name Type Description <code>Component</code> <code>ComponentType</code>&lt;<code>P</code>&gt; React Class based Component"},{"location":"reference/react-auth-kit/hoc/withIsAuthenticated/#returns","title":"Returns","text":"<p><code>React.FunctionComponent</code>&lt;<code>P</code>&gt;</p> <p>React Higher Order Component with injected <code>isAuth</code> prop</p> <p>React HOC that injects the authentication state into the class-based component props</p>"},{"location":"reference/react-auth-kit/hoc/withIsAuthenticated/#example","title":"Example","text":"<pre><code>class MyComponent extends React.Component {\n render() {\n   return &lt;h1&gt;Hello, {this.props.isAuth}&lt;/h1&gt;;\n }\n}\nexport default withIsAuthenticated(MyComponent);\n</code></pre>"},{"location":"reference/react-auth-kit/hoc/withIsAuthenticated/#throws","title":"Throws","text":"<p>AuthError - Thrown if the Hook is used outside the Provider Scope.</p>"},{"location":"reference/react-auth-kit/hoc/withIsAuthenticated/#defined-in","title":"Defined in","text":"<p>higherOrderComponents/withIsAuthenticated.tsx</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hoc/withSignIn/","title":"withSignIn","text":"<p>Deprecated Higher-order components are not commonly used in modern React code, use Hooks instead</p>"},{"location":"reference/react-auth-kit/hoc/withSignIn/#import","title":"Import","text":"<pre><code>import withSignIn from 'react-auth-kit/higherOrderComponents/withSignIn';\n</code></pre>"},{"location":"reference/react-auth-kit/hoc/withSignIn/#function-signature","title":"Function Signature","text":"<p>withSignIn&lt;<code>T</code>, <code>P</code>&gt;(<code>Component</code>): <code>React.FunctionComponent</code>&lt;<code>P</code>&gt;</p>"},{"location":"reference/react-auth-kit/hoc/withSignIn/#type-parameters","title":"Type Parameters","text":"Name Type Description <code>T</code> <code>T</code> Type of User State Object <code>P</code> extends <code>withSignInProps</code>&lt;<code>T</code>&gt; -"},{"location":"reference/react-auth-kit/hoc/withSignIn/#parameters","title":"Parameters","text":"Name Type Description <code>Component</code> <code>ComponentType</code>&lt;<code>P</code>&gt; React Class based Component"},{"location":"reference/react-auth-kit/hoc/withSignIn/#signinconfig-parameters","title":"signInConfig Parameters","text":"Name Type Descripntion Required <code>auth.token</code> <code>string</code> JWT Auth Token <code>true</code> <code>auth.type</code> <code>string</code> Type of the Token <code>false</code> <code>refresh</code> <code>string</code> JWT Refresh Token <code>true</code> <code>userState</code> <code>T</code> User Data <code>false</code>"},{"location":"reference/react-auth-kit/hoc/withSignIn/#returns","title":"Returns","text":"<p><code>React.FunctionComponent</code>&lt;<code>P</code>&gt;</p> <p>React Higher Order Component with injected <code>signIn</code> prop</p> <p>React HOC that injects the <code>signIn</code> function into the class-based component props.</p> <p>Call the <code>signIn</code> function in the prop to sign In and authenticate the user</p> <p>This will authenticate the user by writing the user state into the memory Also, this will call the RX engine to store the auth in the storage</p>"},{"location":"reference/react-auth-kit/hoc/withSignIn/#example","title":"Example","text":"<p>Here is an example without the refresh token: <pre><code>class MyComponent extends React.Component {\n this.props.signIn({\n   auth: {\n     token: '&lt;jwt token&gt;'\n   },\n   userState: {name: 'React User', uid: 123456}\n })\n}\nexport default withSignIn(MyComponent);\n</code></pre></p> <p>Here is an example with a refresh token: <pre><code>class MyComponent extends React.Component {\n this.props.signIn({\n   auth: {\n     token: '&lt;jwt token&gt;'\n   },\n   userState: {name: 'React User', uid: 123456},\n   refresh: &lt;refresh jwt token&gt;\n }),\n}\nexport default withSignIn(MyComponent);\n</code></pre></p>"},{"location":"reference/react-auth-kit/hoc/withSignIn/#throws","title":"Throws","text":"<p>AuthError - Thrown if the Hook is used outside the Provider Scope.</p>"},{"location":"reference/react-auth-kit/hoc/withSignIn/#defined-in","title":"Defined in","text":"<p>higherOrderComponents/withSignIn.tsx</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hoc/withSignOut/","title":"withSignOut","text":"<p>Deprecated Higher-order components are not commonly used in modern React code, use Hooks instead</p>"},{"location":"reference/react-auth-kit/hoc/withSignOut/#import","title":"Import","text":"<pre><code>import withSignOut from 'react-auth-kit/higherOrderComponents/withSignOut';\n</code></pre>"},{"location":"reference/react-auth-kit/hoc/withSignOut/#function-signature","title":"Function Signature","text":"<p>withSignOut&lt;<code>P</code>&gt;(<code>Component</code>): <code>React.FunctionComponent</code>&lt;<code>P</code>&gt;</p>"},{"location":"reference/react-auth-kit/hoc/withSignOut/#type-parameters","title":"Type Parameters","text":"Name Type Description <code>P</code> extends <code>withSignOutProps</code> Props of the component"},{"location":"reference/react-auth-kit/hoc/withSignOut/#parameters","title":"Parameters","text":"Name Type Description <code>Component</code> <code>ComponentType</code>&lt;<code>P</code>&gt; React Class based Component"},{"location":"reference/react-auth-kit/hoc/withSignOut/#returns","title":"Returns","text":"<p><code>React.FunctionComponent</code>\\&lt;<code>P</code>&gt;</p> <p>React Higher Order Component with injected <code>signOut</code> prop</p> <p>React HOC that injects the <code>signOut</code> function into the class-based component props.</p> <p>Call the <code>signOut</code> function in the prop to sign out and delete all the auth state</p> <p>This will remove the authState from memory and also remove the stored data from cookie or localstorage</p>"},{"location":"reference/react-auth-kit/hoc/withSignOut/#example","title":"Example","text":"<p>Here's a simple example: <pre><code>class MyComponent extends React.Component {\n this.props.signOut();\n ...\n}\nexport default withSignOut(MyComponent);\n</code></pre></p>"},{"location":"reference/react-auth-kit/hoc/withSignOut/#remarks","title":"Remarks","text":"<p>For Now, this hook doesn't redirect automatically. So one needs to write the redirect logic himself.</p>"},{"location":"reference/react-auth-kit/hoc/withSignOut/#throws","title":"Throws","text":"<p>AuthError - Thrown if the Hook is used outside the Provider Scope.</p>"},{"location":"reference/react-auth-kit/hoc/withSignOut/#defined-in","title":"Defined in","text":"<p>higherOrderComponents/withSignOut.tsx</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hooks/","title":"React Auth Kit Hooks","text":"<p>Here are the list of hooks, that are supported by react auth kit</p> <ul> <li>useAuthHeader - Get the auth header into the react component</li> <li>useAuthUser - Get the data of the user into the react component</li> <li>useIsAuthenticated - Check the authentication status inside the react component</li> <li>useSignIn - Use this hook to signin or login your user into your application</li> <li>useSignOut - Use this hook to sign out or log out your user from the application</li> </ul> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hooks/useAuthHeader/","title":"useAuthHeader","text":""},{"location":"reference/react-auth-kit/hooks/useAuthHeader/#import","title":"Import","text":"<pre><code>import useAuthHeader from 'react-auth-kit/hooks/useAuthHeader';\n</code></pre>"},{"location":"reference/react-auth-kit/hooks/useAuthHeader/#function-signature","title":"Function Signature","text":"<p>useAuthHeader(): <code>string</code> | <code>null</code></p> <p>Auth Header React Hook</p> <p>Call the hook, to get the auth header inside the component</p> <p>Format: <code>type token</code> (authType&lt;space&gt;authToken)</p>"},{"location":"reference/react-auth-kit/hooks/useAuthHeader/#returns","title":"Returns","text":"<p><code>string</code> | <code>null</code></p> <p>If the user is authenticated, then <code>'auth.type auth.token'</code> is returned. If the user is not authenticated, then <code>null</code> is returned.</p>"},{"location":"reference/react-auth-kit/hooks/useAuthHeader/#example","title":"Example","text":"<p>Here is a simple example <pre><code>import useAuthHeader from 'react-auth-kit/hooks/useAuthHeader'\n\nconst Component = () =&gt; {\n const authHeader = useAuthHeader();\n const headers = {\n   'Authorization': authHeader\n }\n // use the headers in the network request\n ...\n}\n</code></pre></p>"},{"location":"reference/react-auth-kit/hooks/useAuthHeader/#throws","title":"Throws","text":"<p>AuthError Thrown if the Hook is used outside the Provider Scope.</p>"},{"location":"reference/react-auth-kit/hooks/useAuthHeader/#defined-in","title":"Defined in","text":"<p>hooks/useAuthHeader.ts</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hooks/useAuthUser/","title":"useAuthUser","text":""},{"location":"reference/react-auth-kit/hooks/useAuthUser/#import","title":"Import","text":"<pre><code>import useAuthUser from 'react-auth-kit/hooks/useAuthUser';\n</code></pre>"},{"location":"reference/react-auth-kit/hooks/useAuthUser/#function-signature","title":"Function Signature","text":"<p>useAuthUser&lt;<code>T</code>&gt;<code>(): T | null</code></p> <p>Auth User Data React Hook</p> <p>Call the hook, to get the authenticated user data into your React Component</p> <p>This uses the context data to determine the user data</p>"},{"location":"reference/react-auth-kit/hooks/useAuthUser/#type-parameters","title":"Type Parameters","text":"Name Description <code>T</code> Type of User State Object"},{"location":"reference/react-auth-kit/hooks/useAuthUser/#returns","title":"Returns","text":"<p><code>T</code> | <code>null</code></p> <p>React Hook with user state functionality. If the user is authenticated, then user data is returned. If the user is not authenticated, then <code>null</code> is returned.</p>"},{"location":"reference/react-auth-kit/hooks/useAuthUser/#example","title":"Example","text":"<p>Here is an example of JavaScript <pre><code>import useAuthUser from 'react-auth-kit/hooks/useAuthUser'\n\nconst Component = () =&gt; {\n const authUser = useAuthUser()\n const name = authUser.name;\n const uuid = authUser.uuid;\n ...\n}\n</code></pre> Here is the example of TypeScript <pre><code>import useAuthUser from 'react-auth-kit/hooks/useAuthUser'\n\ninterface IUserData {\n name: string;\n uuid: string;\n};\n\nconst Component = () =&gt; {\n const authUser = useAuthUser&lt;IUserData&gt;()\n const name = authUser.name;\n const uuid = authUser.uuid;\n ...\n}\n</code></pre></p>"},{"location":"reference/react-auth-kit/hooks/useAuthUser/#throws","title":"Throws","text":"<p>AuthError Thrown if the Hook is used outside the Provider Scope.</p>"},{"location":"reference/react-auth-kit/hooks/useAuthUser/#defined-in","title":"Defined in","text":"<p>hooks/useAuthUser.ts</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hooks/useIsAuthenticated/","title":"useIsAuthenticated","text":""},{"location":"reference/react-auth-kit/hooks/useIsAuthenticated/#import","title":"Import","text":"<pre><code>import useIsAuthenticated from 'react-auth-kit/hooks/useIsAuthenticated';\n</code></pre>"},{"location":"reference/react-auth-kit/hooks/useIsAuthenticated/#function-signature","title":"Function Signature","text":"<p>useIsAuthenticated(): () =&gt; <code>boolean</code>Is Authenticated, React Hook</p> <p>Call the hook to know if the user is authenticated or not</p> <p>This uses the context data to determine whether the user is authenticated or not.</p>"},{"location":"reference/react-auth-kit/hooks/useIsAuthenticated/#returns","title":"Returns","text":"<p><code>fn</code> =&gt; (): <code>boolean</code></p>"},{"location":"reference/react-auth-kit/hooks/useIsAuthenticated/#example","title":"Example","text":"<pre><code>import useIsAuthenticated from 'react-auth-kit/hooks/useIsAuthenticated'\n\nconst Component = () =&gt; {\n const isAuthenticated = useIsAuthenticated()\n if (isAuthenticated()) {\n   // user authenticated - do somthing\n }\n else {\n   // user not authenticated\n }\n</code></pre>"},{"location":"reference/react-auth-kit/hooks/useIsAuthenticated/#throws","title":"Throws","text":"<p>AuthError - Thrown if the Hook is used outside the Provider Scope.</p>"},{"location":"reference/react-auth-kit/hooks/useIsAuthenticated/#defined-in","title":"Defined in","text":"<p>hooks/useIsAuthenticated.ts</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hooks/useSignIn/","title":"useSignIn","text":""},{"location":"reference/react-auth-kit/hooks/useSignIn/#import","title":"Import","text":"<pre><code>import useSignIn from 'react-auth-kit/hooks/useSignIn';\n</code></pre>"},{"location":"reference/react-auth-kit/hooks/useSignIn/#function-signature","title":"Function Signature","text":"<p>useSignIn&lt;<code>T</code>&gt;(): (<code>signInConfig</code>: <code>signInFunctionParams</code>&lt;<code>T</code>&gt;) =&gt; <code>boolean</code></p> <p>Sign In React Hook</p> <p>Call the hook to sign In and authenticate the user</p> <p>This will authenticate the user by writing the user state into the memory Also, this will call the RX engine to store the auth in the storage</p>"},{"location":"reference/react-auth-kit/hooks/useSignIn/#type-parameters","title":"Type Parameters","text":"Name Description <code>T</code> Type of User State Object"},{"location":"reference/react-auth-kit/hooks/useSignIn/#returns","title":"Returns","text":"<p>React Hook with SignIn Functionality</p> <p><code>fn</code> =&gt; (<code>signInConfig</code>): <code>boolean</code></p>"},{"location":"reference/react-auth-kit/hooks/useSignIn/#parameters","title":"Parameters","text":"Name Type Descripntion <code>signInConfig</code> <code>signInFunctionParams</code>&lt;<code>T</code>&gt; Params for signin"},{"location":"reference/react-auth-kit/hooks/useSignIn/#signinconfig-parameters","title":"signInConfig Parameters","text":"Name Type Descripntion Required <code>auth.token</code> <code>string</code> JWT Auth Token <code>true</code> <code>auth.type</code> <code>string</code> Type of the Token <code>false</code> <code>refresh</code> <code>string</code> JWT Refresh Token <code>true</code> <code>userState</code> <code>T</code> User Data <code>false</code> <pre><code>{\n  auth : {\n    token: 'ey.........o1',\n    type: 'Bearer'\n  },\n  refresh: 'ey..........92',\n  userState: {\n    name: 'The Dev'\n    uuid: 'fff-fff-ffff'\n  }\n}\n</code></pre>"},{"location":"reference/react-auth-kit/hooks/useSignIn/#example","title":"Example","text":"<p>Here's an example without the refresh token: <pre><code>import useSignIn from 'react-auth-kit/hooks/useSignIn'\n\nconst LoginComponent = () =&gt; {\n const signIn = useSignIn()\n signIn({\n   auth: {\n     token: '&lt;jwt token&gt;'\n   },\n   userState: {name: 'React User', uid: 123456}\n })\n}\n</code></pre></p> <p>Here's an example with a refresh token in TypeScript: <pre><code>import useSignIn from 'react-auth-kit/hooks/useSignIn'\n\n interface IUserData {\n name: string;\n uuid: string;\n};\n\nconst LoginComponent = () =&gt; {\n const signIn = useSignIn&lt;IUserData&gt;()\n signIn({\n   auth: {\n     token: '&lt;jwt token&gt;'\n   },\n   userState: {name: 'React User', uid: 123456},\n   refresh: &lt;refresh jwt token&gt;\n })\n}\n</code></pre></p>"},{"location":"reference/react-auth-kit/hooks/useSignIn/#remarks","title":"Remarks","text":"<p>If you are using the refresh token, make sure you add that in the parameter, else it throws AuthError</p> <p>If you are not using the refresh token, make sure you don't include that in the parameter, else it throws AuthError.</p>"},{"location":"reference/react-auth-kit/hooks/useSignIn/#throws","title":"Throws","text":"<p>AuthError</p> <ul> <li>Thrown if the Hook is used outside the Auth Provider Scope.</li> <li>Thrown if refresh token is added, despite not being used.</li> <li>Thrown if refresh token is not added, is spite used.</li> </ul>"},{"location":"reference/react-auth-kit/hooks/useSignIn/#defined-in","title":"Defined in","text":"<p>hooks/useSignIn.ts</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-auth-kit/hooks/useSignOut/","title":"useSignOut","text":""},{"location":"reference/react-auth-kit/hooks/useSignOut/#import","title":"Import","text":"<pre><code>import useSignOut from 'react-auth-kit/hooks/useSignOut';\n</code></pre>"},{"location":"reference/react-auth-kit/hooks/useSignOut/#function-signature","title":"Function Signature","text":"<p>useSignOut(): () =&gt; <code>boolean</code></p> <p>Sign Out React Hook</p> <p>Call the hook to sign out and delete all the auth state</p> <p>This will remove the authState from memory and also remove the stored data from <code>cookie</code> or <code>localstorage</code></p>"},{"location":"reference/react-auth-kit/hooks/useSignOut/#returns","title":"Returns","text":"<p>React Hook with SignOut Functionality</p> <p><code>fn</code> =&gt; (): <code>boolean</code></p>"},{"location":"reference/react-auth-kit/hooks/useSignOut/#example","title":"Example","text":"<p>Here's a simple example: <pre><code>import useSignOut from 'react-auth-kit/hooks/useSignOut'\n\nconst SecureComponent = () =&gt; {\n  const signOut = useSignOut()\n  return (\n    &lt;button onClick={() =&gt; signOut()}&gt;Sign Out!&lt;/button&gt;\n  )\n}\n</code></pre></p>"},{"location":"reference/react-auth-kit/hooks/useSignOut/#remarks","title":"Remarks","text":"<p>For Now, this hook doesn't redirect automatically. So one needs to write the redirect logic himself.</p> <pre><code>const signOut = useSignOut()\nsignOut()\nnavigate('/login')\n</code></pre>"},{"location":"reference/react-auth-kit/hooks/useSignOut/#throws","title":"Throws","text":"<p>AuthError - Thrown if the Hook is used outside the Provider Scope.</p>"},{"location":"reference/react-auth-kit/hooks/useSignOut/#defined-in","title":"Defined in","text":"<p>hooks/useSignOut.ts</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-router/authoutlet/","title":"AuthOutlet","text":""},{"location":"reference/react-router/authoutlet/#import","title":"Import","text":"<pre><code>import AuthOutlet from '@auth-kit/react-router/AuthOutlet'\n</code></pre>"},{"location":"reference/react-router/authoutlet/#function-signature","title":"Function Signature","text":"<p>AuthOutlet(<code>{fallbackPath: string}</code>): <code>React.ReactNode</code></p> <p>AuthOutlet provides an easy solution to implement private route solutions using the react-router-dom route system</p>"},{"location":"reference/react-router/authoutlet/#parameters","title":"Parameters","text":"Name Type Description <code>fallbackPath</code> <code>string</code> Path to redirect if the user is not authenticated"},{"location":"reference/react-router/authoutlet/#example","title":"Example","text":"<pre><code>function App() {\n return (\n   &lt;Router&gt;\n     &lt;Routes&gt;\n       &lt;Route element={&lt;AuthOutlet fallbackPath='/login' /&gt;}&gt;\n         &lt;Route path='/' element={&lt;Users/&gt;} /&gt;\n         &lt;Route path='/products' element={&lt;Products/&gt;} /&gt;\n       &lt;/Route&gt;\n       &lt;Route path='/login' element={&lt;Login/&gt;}/&gt;\n     &lt;/Routes&gt;\n   &lt;/Router&gt;\n );\n}\n</code></pre>"},{"location":"reference/react-router/authoutlet/#defined-in","title":"Defined in","text":"<p>packages/react-router/src/AuthOutlet.tsx</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"reference/react-router/requireauth/","title":"RequireAuth","text":""},{"location":"reference/react-router/requireauth/#import","title":"Import","text":"<pre><code>import AuthOutlet from '@auth-kit/react-router/AuthOutlet'\n</code></pre>"},{"location":"reference/react-router/requireauth/#function-signature","title":"Function Signature","text":"<p>RequireAuth(<code>{fallbackPath: string}</code>): <code>React.ReactNode</code></p> <p>RequireAuth provides a solution for implementing auth on per per-component basis for private route solutions using the react-router-dom route system</p>"},{"location":"reference/react-router/requireauth/#parameters","title":"Parameters","text":"Name Type Description <code>fallbackPath</code> <code>string</code> Path to redirect if the user is not authenticated"},{"location":"reference/react-router/requireauth/#example","title":"Example","text":"<pre><code>const RoutesComponent = () =&gt; {\n return (\n   &lt;BrowserRouter&gt;\n     &lt;Routes&gt;\n       &lt;Route path={'/'} element={&lt;Home/&gt;}/&gt;\n       &lt;Route path={'/login' } element={&lt;Login/&gt;}/&gt;\n       &lt;Route path={'/secure'} element={\n         &lt;RequireAuth fallbackPath={'/login'}&gt;\n           &lt;SecureComponent/&gt;\n         &lt;/RequireAuth&gt;\n       }/&gt;\n     &lt;/Routes&gt;\n   &lt;/BrowserRouter&gt;\n )\n}\n</code></pre>"},{"location":"reference/react-router/requireauth/#defined-in","title":"Defined in","text":"<p>packages/react-router/src/RequireAuth.tsx</p> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is MIT License code</p>"},{"location":"update/1to2/","title":"Update Auth Kit from v1 to v2","text":""},{"location":"update/1to2/#whats-changed","title":"What's changed","text":"<ul> <li>React Auth Kit v2 comes with the support of <code>React Router v6</code>.</li> <li>React Auth Kit v2 stops using the <code>PrivateRoute</code> component.</li> <li>React Auth Kit v2 introduces new component named <code>RequireAuth</code>.</li> <li><code>RequireAuth</code> will replace the use-cases of <code>PrivateRoute</code>. It also will make the process easier to manage.</li> </ul>"},{"location":"update/1to2/#update-to-v2","title":"Update to v2","text":""},{"location":"update/1to2/#component-structure-in-v1","title":"Component structure in v1","text":"RouteComponent<pre><code>&lt;BrowserRouter&gt;\n  &lt;Switch&gt;\n    &lt;Route path={'/'} component={Home} exact/&gt;\n    &lt;Route path={'/login' } component={Login} exact/&gt;\n    &lt;PrivateRoute path={'/secure'}\n                  component={SecureComponent}\n                  loginPath={'/login'} exact\n    /&gt;\n  &lt;/Switch&gt;\n&lt;/BrowserRouter&gt;\n</code></pre>"},{"location":"update/1to2/#component-structure-in-v2","title":"Component structure in v2","text":"RouteComponent<pre><code>&lt;BrowserRouter&gt;\n  &lt;Routes&gt;\n    &lt;Route path={'/'} element={&lt;Home/&gt;}/&gt;\n    &lt;Route path={'/login' } element={&lt;Login/&gt;}/&gt;\n    &lt;Route path={'/secure'} element={\n        &lt;RequireAuth loginPath={'/login'}&gt;\n          &lt;SecureComponent/&gt;\n        &lt;/RequireAuth&gt;\n    }/&gt;\n  &lt;/Routes&gt;\n&lt;/BrowserRouter&gt;\n</code></pre> <p>\u2014 \ud83d\udd11  \u2014</p> <p>React Auth Kit is Apache 2.0 License code</p>"}]}